name: Budibase Deployment

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Start Services
      run: |
        cp .env.test .env
        docker-compose up -d
        sleep 30  # Initial wait

    - name: Initialize CouchDB
      run: |
        # Wait for CouchDB
        timeout 120 bash -c 'until curl -s http://admin:password@localhost:5984 >/dev/null; do
          docker-compose logs couchdb-service --tail=10
          sleep 10
        done'
        
        # Create system databases
        curl -X PUT http://admin:password@localhost:5984/_users
        curl -X PUT http://admin:password@localhost:5984/_replicator

    - name: Import Application
      run: |
        # Get admin token
        TOKEN=$(curl -s -X POST \
          -H "Content-Type: application/json" \
          -d '{"email":"admin@example.com","password":"admin123"}' \
          http://localhost:10000/api/global/auth/login | jq -r '.token')
        
        # Import app
        curl -X POST \
          -H "Authorization: Bearer $TOKEN" \
          -F "file=@apps/your-app.tar.gz" \
          http://localhost:10000/api/builder/import

    - name: Verify Deployment
      run: |
        # Check main endpoint
        curl -sIf http://localhost:10000
        # Check app exists
        curl -s http://localhost:10000/api/public/apps | jq

    - name: Cleanup (on failure)
      if: failure()
      run: |
        docker-compose logs --no-color > docker_logs.txt
        docker-compose down -v
        echo "::set-output name=logs::$(cat docker_logs.txt)"

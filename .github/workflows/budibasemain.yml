name: Deploy Budibase App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_TAR: "Change Request-export-1742513993388.tar.gz"
    
    steps:
    - uses: actions/checkout@v4

    - name: Create .env file
      run: |
        cat > .env <<EOF
        MAIN_PORT=10000
        API_ENCRYPTION_KEY=7b4itBZwdFMi93fWnmzdqf6sdo2cYzS8
        JWT_SECRET=uc4oxFGTtOzmZ9MSNIREUfAuZ7ipjH6k
        MINIO_ACCESS_KEY=GFzVuTGbhgHoG0gfyxSdhRssa75yKzH8
        MINIO_SECRET_KEY=O1Fe9MbbktZY0GKaGzgM9vKus3GcPBA8
        REDIS_PASSWORD=d0ceO3xqfCx5IdPNlBbwG3TiC90qWKfj
        INTERNAL_API_KEY=63p4u6JdMHhXeyXUiiwgJy8Qd9F7uF2z
        COUCH_DB_USER=admin
        COUCH_DB_PASSWORD=B74ZsOAnLMlboju5em4x9YMComIy7KV5
        BB_ADMIN_USER_EMAIL=admin@example.com
        BB_ADMIN_USER_PASSWORD=admin123
        PLUGINS_DIR=/plugins
        BUDIBASE_ENVIRONMENT=PRODUCTION
        EOF

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Start services
      run: |
        docker-compose up -d
        sleep 30

    - name: Initialize CouchDB
      run: |
        timeout 180 bash -c 'until curl -s http://admin:$COUCH_DB_PASSWORD@localhost:5984 >/dev/null; do
          echo "Waiting for CouchDB..."
          docker-compose logs couchdb-service --tail=5
          sleep 10
        done'
        
        curl -X PUT http://admin:$COUCH_DB_PASSWORD@localhost:5984/_users
        curl -X PUT http://admin:$COUCH_DB_PASSWORD@localhost:5984/_replicator

    - name: Import application
      run: |
        # Get admin token
        TOKEN=$(curl -s -X POST \
          -H "Content-Type: application/json" \
          -d '{"email":"admin@example.com","password":"admin123"}' \
          http://localhost:10000/api/global/auth/login | jq -r '.token')
        
        # Import the app
        curl -X POST \
          -H "Authorization: Bearer $TOKEN" \
          -F "file=@$APP_TAR" \
          http://localhost:10000/api/builder/import

    - name: Verify deployment
      run: |
        curl -s http://localhost:10000/api/health | grep -q "OK" || (docker-compose logs; exit 1)
        echo "Deployment successful!"

    - name: Cleanup on failure
      if: failure()
      run: |
        docker-compose logs --no-color > logs.txt
        echo "::group::Container Logs"
        cat logs.txt
        echo "::endgroup::"
        exit 1
